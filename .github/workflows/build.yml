name: build-and-push

on: 
  pull_request:
    branches: 
      - master
  push:
  workflow_run:
    workflows: ["quality-and-test"]
    types: 
      - completed
env:
    # Default
    DEBUG: ${{ secrets.DEBUG }}
    SECRET_KEY: ${{ secrets.SECRET_KEY }}
    DJANGO_ALLOWED_HOSTS: ${{ secrets.ACTION_DJANGO_ALLOWED_HOSTS }}
    CELERY_BROKER: ${{ secrets.CELERY_BROKER }}
    CELERY_BACKEND: ${{ secrets.CELERY_BACKEND }}
    # AWS S3
    AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
    AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
    AWS_STORAGE_BUCKET_NAME: ${{secrets.AWS_STORAGE_BUCKET_NAME}}
    # Docker images
    DOCKER_USER: ${{secrets.DOCKER_USER}}
    DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
    REGISTRY: docker.io
    WEB_IMAGE: ${{ secrets.WEB_IMAGE }}
    CELERY_IMAGE: ${{ secrets.CELERY_IMAGE }}
    BEAT_IMAGE: ${{ secrets.BEAT_IMAGE }}
    DASH_IMAGE: ${{ secrets.DASH_IMAGE }}
    NGINX_IMAGE: ${{ secrets.NGINX_IMAGE }}
    # Nginx proxy
    VIRTUAL_HOST: ${{secrets.VIRTUAL_HOST}}
    VIRTUAL_PORT: ${{secrets.VIRTUAL_PORT}}
    # let encrypted
    DEFAULT_EMAIL: ${{secrets.DEFAULT_EMAIL}}

jobs:
    push-image-to-docker-hub:  # job name
        runs-on: ubuntu-latest  # runner name : (ubuntu latest version) 
        needs: test_project
        steps:
        - uses: actions/checkout@v3 # first action : checkout source code
        - name: Create env file
          run: |
              chmod +x ./apps/setup_env.ci.sh
              bash ./apps/setup_env.ci.sh
        - name: docker login
          run: | # log into docker hub account
              docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $REGISTRY
        - name: Pull Web and nginx image # push The image to the docker hub
          run: |
              docker pull push $WEB_IMAGE || true
              docker pull $CELERY_IMAGE || true
              docker pull $BEAT_IMAGE || true
              docker pull $DASH_IMAGE || true
              docker pull $NGINX_IMAGE || true
        - name: Build docker compose
          run: docker-compose -f docker-compose.ci.yml build
        - name: Push all images to Docker Hub
          run: |
              docker push $WEB_IMAGE
              docker push $CELERY_IMAGE
              docker push $BEAT_IMAGE
              docker push $DASH_IMAGE
              docker push $NGINX_IMAGE
